(function(){"use strict";const n="pwa-workshop-v1",r="offline.html",i="audio-cache-v1",d=["/","/index.html","/sender.html","/offline.html","/css/style.css","/css/preview.css","/js/main.js","/js/preview.js","/manifest.json","/images/logo.svg","/images/maskable.svg","/images/paper.svg","/images/mode_night_gm_grey_24dp.svg","/images/wb_sunny_gm_grey_24dp.svg","/images/icons/logo-48.png","/images/icons/logo-72.png","/images/icons/logo-96.png","/images/icons/logo-128.png","/images/icons/logo-192.png","/images/icons/logo-384.png","/images/icons/logo-512.png","/images/icons/maskable-1024.png"];self.addEventListener("install",e=>{e.waitUntil((async()=>{const a=await caches.open(n);await a.addAll(d);const s=new Response(await a.match(r),{headers:{"Content-Type":"text/html"}});await a.put(r,s)})()),self.skipWaiting()}),self.addEventListener("activate",e=>{e.waitUntil((async()=>{"navigationPreload"in self.registration&&await self.registration.navigationPreload.enable();const s=(await caches.keys()).map(t=>{if(t!==n&&t!==i)return caches.delete(t)});await Promise.all(s)})()),self.clients.claim()}),self.addEventListener("sync",e=>{e.tag==="audio-sync"&&e.waitUntil((async()=>{try{const s=await(await caches.open(i)).match("/audio-cache");if(s){const c=(await self.clients.matchAll()).find(o=>o.url.includes("sender.html"));c&&c.postMessage({type:"cached-audio",data:await s.arrayBuffer()})}}catch(a){console.error("Error in background sync:",a)}})())}),self.addEventListener("backgroundfetchsuccess",e=>{e.waitUntil((async()=>{try{const s=(await e.registration.matchAll()).map(async t=>{const c=await t.responseReady;await(await caches.open(i)).put("/audio-cache",c),await self.registration.sync.register("audio-sync")});await Promise.all(s)}catch(a){console.error("Background fetch failed:",a)}finally{e.registration.complete()}})())}),self.addEventListener("backgroundfetchfail",e=>{console.error("Background fetch failed:",e),e.registration.complete()}),self.addEventListener("backgroundfetchabort",e=>{console.log("Background fetch aborted:",e),e.registration.complete()}),self.addEventListener("message",e=>{e.data&&e.data.type==="cache-audio"&&e.waitUntil((async()=>{try{const a=await caches.open(i),s=new Response(e.data.audioData);await a.put("/audio-cache",s)}catch(a){console.error("Error caching audio data:",a)}})())}),self.addEventListener("fetch",e=>{e.respondWith((async()=>{var a;try{const s=await e.preloadResponse;if(s)return s;const t=await fetch(e.request);return e.request.method==="GET"&&(await caches.open(n)).put(e.request,t.clone()),t}catch(s){const t=await caches.open(n),c=await t.match(e.request);if((a=e.request.headers.get("accept"))!=null&&a.includes("audio")){const l=await(await caches.open(i)).match("/audio-cache");if(l)return new Response(l.body,{headers:{"Content-Type":"audio/mpeg","Cache-Control":"no-cache"}})}else if(c)return c;if(e.request.mode==="navigate"){const o=await t.match(r);if(o)return o}throw s}})())})})();
